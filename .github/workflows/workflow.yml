name: Build, Test, and Publish on Release

on:
  release:
    types: [published]

jobs:
  build_and_test_3_12:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          python3 -m spacy download ja_core_news_lg

      - name: Install build
        run: |
          python -m pip install build

      - name: Set Environment Variables and Run Tests
        run: |
          python tests/passing.py

      - name: Build the package
        run: |
          python -m build

  build_and_test_3_11:
    needs: build_and_test_3_12
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          python3 -m spacy download ja_core_news_lg

      - name: Install build
        run: |
          python -m pip install build

      - name: Set Environment Variables and Run Tests
        run: |
          python tests/passing.py

      - name: Build the package
        run: |
          python -m build

  build_and_test_3_10:
    needs: build_and_test_3_11
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          python3 -m spacy download ja_core_news_lg

      - name: Install build
        run: |
          python -m pip install build

      - name: Set Environment Variables and Run Tests
        run: |
          python tests/passing.py

      - name: Install twine
        run: |
          python -m pip install twine

      - name: Build the package
        run: |
          python -m build

      - name: Publish the package to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m twine upload dist/*